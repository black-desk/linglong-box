@startuml ll-box

skinparam responseMessageBelowArrow true

actor user
participant "ll-box" as cli
participant monitor

box "rootfs namespaces"
participant "rootfs preparer" as rootfs
end box

box "container namespaces"
participant init
participant app
end box

user -> cli: run "create"
activate cli
cli -> cli: parse config.json
cli -> cli: update state

==creating==

cli ->> monitor: fork
activate monitor


monitor -> monitor: prctl **PR_SET_CHILD_SUBREAPER**
monitor -> rootfs: clone & vfork
note left
blocked
end note
activate rootfs

group prepare rootfs
rootfs -> rootfs: setup user namespace
rootfs -> rootfs: do native mounts
rootfs -> rootfs: setup fuse
rootfs -> rootfs: setup dbus-proxy
end
rootfs -> init: clone
activate init
init -> init: setup container
init -> init: start listening socket
rootfs <-- init: "create" result
monitor <- rootfs: init pid
note left
resume
end note
deactivate rootfs
cli <-- monitor: "create" result
cli -> cli: update state
==created==
monitor -> monitor: run "createRuntime"
monitor -> init: requset run hooks
init -> init: run "createContainer"
monitor <- init: "hooks" result
cli <- monitor: "hooks" result
note over monitor
start waiting
init to exit
end note
user <-- cli: done
deactivate cli

user -> cli: run "start"
activate cli
cli -> init: start process
init -> init: run "startContainer"
cli <-- init: "hooks" result
init -> app: fork & exec
activate app
init -> init: run "poststart"
cli <-- init: "start & hooks" result
cli -> cli: update state
==running==
user <-- cli: done
deactivate cli

app -> app: run

note right
At this time pstree will
show someting like this:
- monitor
  - dbus proxy
  - fuse
  - init
    - app
end note

user -> cli: run "kill"
activate cli
cli -> init: kill
user <-- cli: done
deactivate cli

init -> app: kill
init <-- app: exit
deactivate app
monitor <-- init: exit
deactivate init
monitor -> monitor: update state

==stopped==

user -> cli: run "delete"
activate cli
cli -> monitor: kill
monitor -> monitor: run "poststop"
monitor -> monitor: release rootfs
cli <-- monitor: exit
deactivate monitor
cli -> cli: update state
user <-- cli: done
deactivate cli

@enduml