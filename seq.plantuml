@startuml ll-box

actor user
participant cli
participant monitor

box "rootfs namespaces"
participant "rootfs preparer" as rootfs
end box

box "container namespaces"
participant init
participant app
end box

user -> cli: run "create"
activate cli
cli -> cli: parse config.json
cli -> cli: update state

==creating==

cli ->> monitor: fork
activate monitor
monitor -> monitor: create systemd scope
monitor -> monitor: prctl **PR_SET_CHILD_SUBREAPER**
monitor ->> rootfs: clone
activate rootfs

group config rootfs userns
monitor <- rootfs: requset write ID mapping
monitor -> monitor: setup ID mapping
monitor --> rootfs: done
end

newpage

group prepare rootfs
rootfs -> rootfs: do native mounts
rootfs -> rootfs: maybe setup fuse
rootfs -> rootfs: setup dbus-proxy
end


rootfs -> init: clone
activate init

group config container userns
rootfs <- init: requset write ID mapping
rootfs -> rootfs: setup ID mapping
rootfs --> init: done
end

deactivate rootfs

init -> init: setup container
monitor <-- init: "create" result
cli <-- monitor: "create" result
cli -> cli: update state
==created==
newpage


monitor -> monitor: run "prestart"
monitor -> monitor: run "createRuntime"
monitor -> init: requset run hooks
init -> init: run "createContainer"
init -> init: `pivot_root`
monitor <-- init: "hooks" result
note over init
wait start
endnote
cli <-- monitor: "hooks" result
user <-- cli: done
deactivate cli

newpage

user -> cli: run "start"
activate cli
cli -> init: start process
init -> init: run "startContainer"
init -> app: fork & exec
activate app
init -> monitor : request run hooks
monitor -> monitor: run "poststart"
monitor --> init: "hooks" result
note over monitor
clear memory
endnote
cli <-- init: "start & hooks" result
note over init
clear memory
endnote
cli -> cli: update state

==running==

user <-- cli: done
deactivate cli

user -> cli: run "kill"
activate cli
cli -> init: kill
user <-- cli: done
deactivate cli

init -> app: kill
init <-- app: exit
deactivate app
monitor <-- init: exit
deactivate init
monitor -> monitor: update state

newpage

==stopped==

user -> cli: run "delete"
activate cli
cli -> monitor: kill
monitor -> monitor: run "poststop"
monitor -> monitor: release rootfs
cli <-- monitor: exit
deactivate monitor
cli -> cli: update state
user <-- cli: done
deactivate cli

@enduml
